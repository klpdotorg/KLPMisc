import web
import psycopg2
import decimal
import jsonpickle
import csv
import re
from web import form

# Needed to find the templates
import sys, os,traceback
abspath = os.path.dirname(__file__)
sys.path.append(abspath)
os.chdir(abspath)

import Utility.KLPDB

urls = (
     '/','modinterface',
     '/checksys','checksys',
)

connection = Utility.KLPDB.getConnection()
cursor = connection.cursor()


render_plain = web.template.render('templates/')

application = web.application(urls,globals()).wsgifunc()

statements={"get_sys_comments":"select schoolid,name,to_char(entered_timestamp,'DD-MM-YYYY'),id,comments from tb_sys_data where verified='N' and not (comments is null or comments='')",
            "get_sys_images":"select schoolid,sysid,original_file from tb_sys_images whre verified='N'"}

class modinterface:
  def GET(self):
    sysinfo=[]
    try:
      cursor.execute(statements['get_sys_comments'])
      result = cursor.fetchall()
      for row in result:
        sysinfo.append({"images":[],"sid":row[0],"name":row[1],"date":row[2],"sysid":row[3],"comments":row[4]})
      
      #cursor.execute(statements['get_sys_images']
      #result = cursor.fetchall()
      #for row in result:
        #try:
          #if row[0] in sysinfo:
            #sysinfo[row[0]]["images"].append(row[1])
          #else:
            #sysinfo[row[0]]={"images":[row[0]],"comments":""}
      connection.commit()
    except:
      traceback.print_exc(file=sys.stderr)
      connection.rollback()
    web.header('Content-Type','text/html; charset=utf-8')
    return render_plain.modinterface(sysinfo)
 

class checksys:
  def POST(self):
    sysids=web.input()
    print "Testing "+str(sysids)
    print sysids['1'][1]
    print sysids['1'][2]
   

